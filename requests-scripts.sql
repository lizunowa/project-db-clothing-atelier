use mydb;

#--------------------------
#1 Отсортировать клиентов по алфавиту (order by asc) 

select * from Клиент
order by ФИО_Клиента asc;

#--------------------------
#2 Заказы сроком исполнения больше чем 10 дней (having)

select Номер_заказа, datediff(Дата_выполнения, Дата_оформления) as Срок_исполнения_в_днях 
from Заказ
group by Номер_заказа
having Срок_исполнения_в_днях>10;


#--------------------------
#3 Заказы отсортированные по номеру, содержимое заказов отсортировано по убыванию цены (desc) 

select Номер_заказа, Изделие.Название_изделия, Изделие.Количество_изделий, Изделие.Цена
from Заказ join Изделие
where Номер_заказа=Заказ_Номер_заказа
order by номер_заказа asc, изделие.цена desc;


#--------------------------
#4 Заказы в которых есть платье (and)

select distinct Номер_заказа
from Заказ join Изделие
where Номер_заказа=Заказ_Номер_заказа AND Изделие.Название_изделия = 'Платье';

#--------------------------
#5 Стоимость заказа (using group by, sum)

select Номер_заказа, sum(Изделие.Цена * Изделие.Количество_изделий) as Стоимость_заказа 
from Заказ join Изделие
where Номер_заказа = Заказ_Номер_заказа 
group by Номер_заказа;


#--------------------------
#6 Количество изделий в заказе (count)

select Номер_заказа, count(Изделие.Цена) as Количество_изделий_в_заказе 
from Заказ join Изделие
where Номер_заказа = Заказ_Номер_заказа and not (count(Изделие.Цена) = 1) 
group by Номер_заказа;

#--------------------------
#7 Количество изделий в работе у сотрудников (count)

select Работник.ФИО_работника, count(Изделие.Название_изделия) as Количество_изделий 
from Работник join Изделие
where idРаботник = Работник_idРаботник
group by idРаботник;

#--------------------------
#8 Список всех людей, зарегистрированных в системе (union) 

select ФИО_Клиента as ФИО
from Клиент
union
select ФИО_работника as ФИО 
from Работник;

#--------------------------
#9 Должность работника по имени

DELIMITER $$
create procedure `Должность_работника`(in Имя varchar(45)) BEGIN
select Должность
from Работник
where ФИО_работника = Имя;
END$$
call `Должность_работника`('Жуков Адам Евгеньевич');

#--------------------------
#10 Вывести только хлопок и шерсть в списке фурнитуры (or)

select Фурнитура_idФурнитуры, Фурнитура.Название_фурнитуры, Количество, Фурнитура.Единица_измерения,
Изделие.Название_изделия
from Фурнитура join Фурнитура_изделия join Изделие
where idФурнитуры = Фурнитура_idФурнитуры 
and idИзделие = Изделие_idИзделие 
and (Название_фурнитуры = 'Хлопок' OR Название_фурнитуры='Шерсть');

#--------------------------
#11 Дата выполнения заказов клиента

create procedure `Дата_выполнения_заказа`(in Имя varchar(45)) 
BEGIN
select Номер_заказа, Дата_Выполнения
from Клиент join Заказ
on Клиент.idКлиент = Заказ.Клиент_idКлиент
where ФИО_Клиента = Имя;
END$$
call `Дата_выполнения_заказа`('Наумов Лев Витальевич');

#--------------------------
#12 Фурнитура, где ед измерения не м2

select * from Фурнитура where Единица_измерения not like 'м2';

#--------------------------
#13 Обновление цен на изделия в каком-либо году 

DELIMITER $$
create procedure `Повышение_цен`(in год int) 
BEGIN
select idИзделие, Название_изделия, Цена, (Цена*power(1.12,год-2020)) as NewPrice 
from Изделие;
END$$
call Повышение_цен(2022);

#--------------------------
#14 Цена изделий определенного вида

delimiter $$
create procedure `Цена_изделия`(in Название varchar(45))
BEGIN
select idИзделие, (Цена/Количество_изделий) as Цена_одного_изделия 
from Изделие where Изделие.Название_изделия = Название;
END$$

call `Цена_изделия`('Пиджак');

#--------------------------
#15 Проверка_корректности даты заказа – удалить те, у которых дата оформления позже даты выполнения 

SET SQL_SAFE_UPDATES = 0;
delimiter $$
create procedure `Проверка_корректности`()
begin
delete from Заказ where datediff(Дата_выполнения, Дата_оформления)<0; 
select * from Заказ;
end$$

call `Проверка_корректности`();


#--------------------------
#16 сортировка поставок по датам 

delimiter $$
create procedure `Поставки_по_датам`() 
begin
select * from Поставка 
order by Дата_поставки asc; 
end$$

call `Поставки_по_датам`();

#--------------------------
#17 Показать фурнитуру на определенном складе
delimiter $$
create procedure `Фурнитура_на_складе`(in номерСклад int)
begin
select distinct Фурнитура_idФурнитуры, Фурнитура.Название_фурнитуры 
from Фурнитура_изделия join Фурнитура
on idФурнитуры=Фурнитура_idФурнитуры
where Склад_idСклад = номерСклад;
end$$

call `Фурнитура_на_складе`(301);

#--------------------------
#18 Изменение должности

delimiter $$
create procedure `Изменение_должности`(in ФИО varchar(45), новая_должность varchar(45)) 
begin
update Работник set Должность = Должность where ФИО_работника = ФИО;
end$$
select * from Работник;
call `Изменение_должности`('Жуков Адам Евгеньевич','Управляющий отделом'); 
select * from Работник;

#--------------------------
#19 Изменить номер телефона клиента

delimiter $$
create procedure `Изменить_номер`(in ФИО varchar(45), новый_номер DECIMAL(11)) 
begin
SET SQL_SAFE_UPDATES = 0;
update Клиент set Номер_телефона = новый_номер 
where ФИО_клиента = ФИО; 
select * from Клиент;
end$$

call `Изменить_номер`('Назарова Елена Сергеевна',74950000001);

#--------------------------
#20

delimiter $$
create procedure `Есть_ли_в_изделии_фурнитура`(in название_фурнитуры_check varchar(45)) 
begin
select Название_изделия
from Фурнитура join Фурнитура_изделия join Изделие
on idФурнитуры = Фурнитура_idФурнитуры and idИзделие = Изделие_idИзделие
where Название_фурнитуры = название_фурнитуры_check;
end$$
call `Есть_ли_в_изделии_фурнитура`('Пуговица');
